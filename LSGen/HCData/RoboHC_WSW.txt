[0]
/ATTR
OWNER		= MNEDITOR;
COMMENT		= "14:48 10/24";
PROG_SIZE	= 599;
CREATE		= DATE 24-06-30  TIME 13:51:02;
MODIFIED	= DATE 24-06-30  TIME 13:53:10;
FILE_NAME	= TESTDEF;
VERSION		= 0;
LINE_COUNT	= 4;
MEMORY_SIZE	= 955;
PROTECT		= READ_WRITE;
TCD:  STACK_SIZE	= 0,
      TASK_PRIORITY	= 50,
      TIME_SLICE	= 0,
      BUSY_LAMP_OFF	= 0,
      ABORT_REQUEST	= 0,
      PAUSE_REQUEST	= 0;
DEFAULT_GROUP	= 1,*,*,*,*;
CONTROL_CODE	= 00000000 00000000;
LOCAL_REGISTERS	= 0,0,0;
/APPL

LINE_TRACK;
  LINE_TRACK_SCHEDULE_NUMBER      : 0;
  LINE_TRACK_BOUNDARY_NUMBER      : 0;
  CONTINUE_TRACK_AT_PROG_END      : TRUE;

/MN
[1]
  1:  !,Program to pick a part ;
  2:  DO[500:GRIP_OPEN]=ON;
  3:  DO[499:GRIP_CLOSE]=OFF;
  4:  DO[506:SUCTION_ON]=ON;
  5:  DO[5:START_PROGRAM]=ON ;
  6:  UFRAME_NUM=1 ;
  7:  UTOOL_NUM=2 ;
  8:  R[15]=20;
  9:  R[16]=800;
[2]
[3]
 12:   //WAIT (DI[13:GRIPPER_OPEN_FB])    ;
[4]
[5]
[6]
 16:  DO[500:GRIP_OPEN]=OFF;
 17:  DO[499:GRIP_CLOSE]=ON;
 18:  WAIT 0.25(sec);
 19:  //WAIT (DI[14:GRIPPER_CLOSE_FB])    ;
[7]
[8]
[9]
 23:  UFRAME_NUM=2 ;
[10]
 25:  R[10]=1    ;
 26:  LBL[1] ;
 27:  SELECT R[10]=1,JMP LBL[2] ;
 28:         =2,JMP LBL[3] ;
 29:         =3,JMP LBL[4] ;
 30:         =4,JMP LBL[5] ;
 31:         =5,JMP LBL[6] ;
 32:         =6,JMP LBL[7] ;
 33:         =7,JMP LBL[8] ;
 34:         ELSE,JMP LBL[1] ;
 35:   ;
 36:  LBL[2:INIT] ;
 37:  IF (DO[3:MOVE_TO_UDP] OR DI[3:FIRST_BEND_ACTIVE] AND !DI[9:UDP_REACHED]) THEN ;
 38:  R[10]=2    ;
 39:   ;
 40:  ENDIF ;
 41:  IF (DI[1:NC_START] AND DI[11:PRESS_OK]) THEN ;
 42:  R[10]=3    ;
 43:  JMP LBL[1] ;
 44:  ELSE ;
 45:  JMP LBL[1] ;
 46:  ENDIF ;
 47:   ;
 48:  LBL[3:RAMUP] ;
 49:  DO[3:MOVE_TO_UDP]=ON ;
 50:  WAIT (DI[9:UDP_REACHED])    ;
 51:  DO[3:MOVE_TO_UDP]=OFF ;
 52:  R[10]=3    ;
 53:  JMP LBL[1] ;
 54:   ;
 55:  LBL[4:FASTCLOSING] ;
 56:  IF (DI[3:FIRST_BEND_ACTIVE] OR DI[4:LAST_BEND_ACTIVE] AND DI[9:UDP_REACHED]) THEN ;
 57:  DO[4:STEP_CHANGE]=ON ;
 58:  WAIT (DI[2:BACKGAUGE_IN_POSITION])    ;
 59:  //DO[4:STEP_CHANGE]=OFF ;
 60:  ELSE ;
 61:  JMP LBL[1] ;
 62:  ENDIF ;
 63:  DO[8:ROBOUNSAFE]=ON ;
 64:  LBL[11] ;
 65:  IF (!DI[5:RAM_MOVING]) THEN ;
[11]
[12]
[13]
[14]
[15]
 71:  PR[60]=P[14];
 72:  CALL Bg_al;
 73:  ELSE ;
 74:  WAIT (!DI[5:RAM_MOVING])    ;
 75:  JMP LBL[11] ;
 76:  ENDIF ;
 77:  WAIT (DI[12:FPDOWN])    ;
 78:  DO[8:ROBOUNSAFE]=OFF ;
 79:  DO[6:ENABLE_RAM_DOWN]=ON ;
 80:  WAIT (DI[10:BELOW_MUTE_POINT])    ;
 81:  JMP LBL[5] ;
 82:   ;
 83:  LBL[5:CLAMPING] ;
 84:  DO[1:CLAMPING_POINT_BIT]=ON ;
 85:  WAIT (DI[6:CLAMPING_POINT])    ;
[16]
[17]
 88:  JMP LBL[6] ;
 89:   ;
 90:  LBL[6:MOVETOLDP] ;
 91:  DO[6:ENABLE_RAM_DOWN]=OFF ;
 92:  CALL BEND_sub ;
[18]
 94:  WAIT (DI[8:EoD_REACHED])    ;
 95:  DO[2:MOVE_TO_LDP]=OFF ;
[19]
[20]
 98:  IF (DI[4:LAST_BEND_ACTIVE]) THEN ;
 99:  JMP LBL[8] ;
 100:  ELSE ;
 101:  JMP LBL[7] ;
 102:  ENDIF ;
 103:   ;
 104:  LBL[7:NEXTBEND] ;
 105:  DO[4:STEP_CHANGE]=OFF ;
 106:  DO[3:MOVE_TO_UDP]=ON ;
 107:  WAIT (DI[9:UDP_REACHED])    ;
 108:  UFRAME_NUM=3 ;
[21]
 110:  JMP LBL[3] ;
 111:   ;
 112:  LBL[8:TODEPOSIT] ;
 113:  DO[4:STEP_CHANGE]=OFF ;
 114:  DO[3:MOVE_TO_UDP]=ON ;
 115:  WAIT (DI[9:UDP_REACHED])    ;
[22]
 117:  DO[500:GRIP_OPEN]=ON;
 118:  DO[499:GRIP_CLOSE]=OFF;
 119:  WAIT 0.25(sec);
 120:  //WAIT (DI[13:GRIPPER_OPEN_FB])    ;
[23]
[24]
[25]
[26]
[27]